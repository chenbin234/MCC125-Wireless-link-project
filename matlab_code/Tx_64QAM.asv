function tx_signal = Tx_64QAM(message_bits)
% This function is to send message in 64QAM.
% message_bits = message to be transmitted.
% fc = carrier frequency

% Input parameters -–––––––––––––––––––––––––––––––––––––––––––––––––––––––
Rb = 10*1e6;             % Bit rate [bit/sec] %Rb = fsymb*bpsymb; % Bit rate [bit/s]
N = length(message_bits);% Number of bits to transmit
fc = 2.4*1e9;            % Carrier frequency [Hz]

M = 64;               % Number of symbols in the constellation
bpsymb = log2(M);     % Number of bits per symbol,bpsymb=6 in 64QAM 
fsymb = Rb/bpsymb;    % Symbol rate [symb/s] Rs = 1.67 MBaud/s
Tsymb = 1/fsymb;      % Symbol time
fs = 10*fsymb;        % Sampling frequency [Hz]
Tsamp = 1/fs;         % Sampling time
fsfd = fs/fsymb;      % Number of samples per symbol [samples/symb], fsfd=10

alpha = 0.8;          % Roll off factor / Excess bandwidth factor (a_RC=0.35;a_RRC=0.8)
tau = 1/fsymb;        % Nyquist period or symbol time 
span = 6;             % Pulse width (symbol times of pulse)

% Bit to symbol mapping & spacing: -–––––––––––––––––––––––––––––––––––––––
m = buffer(message_bits, bpsymb)';            % Group bits into bits per symbol
m_idx = bi2de(m, 'left-msb')'+1;              % Bits to symbol index
x = qammod(m_idx, M, UnitAveragePower=true);  % Look up symbols using the indices

% Add preamble: -––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
preamb = [1 1 1 1 1 -1 -1 1 1 -1 1 -1 1];     % 13 bits from Barker code
x = [preamb, x]; 

x_upsample = upsample(x, fsfd);               % Space the symbols fsfd apart, to enable pulse shaping using conv.

% Pulse shaping - Convert symbols to baseband signal: -––––––––––––––––––––
[pulse,~] = rtrcpuls(alpha,tau,fs,span);      % Create rrc pulse: rtrcpuls(alpha,tau,fs,span)
tx_signal = conv(pulse,x_upsample);                   % Create baseband signal (convolve symbol with pulse)


% Add carrier - Convert into passband signal: -––––––––––––––––––––––––––––
% tx_signal = s.*exp(-1i*2*pi*fc*(0:length(s)-1)*Tsamp); % Put the baseband signal on a carrier signal

% Modulation/Upconversion: -–––––––––––––––––––––––––––––––––––––––––––––––
% tx_signal = real(tx_signal);                  % Send real part, information is in amplitude and phase
tx_signal = tx_signal/max(abs(tx_signal));    % Limit the max amplitude to 1 to prevent clipping of waveforms
disp(['the length of transmitter signal is ',num2str(length(tx_signal))])

end